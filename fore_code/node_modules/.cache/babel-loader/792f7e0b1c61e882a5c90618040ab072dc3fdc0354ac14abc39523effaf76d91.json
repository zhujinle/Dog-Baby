{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      LoginForm: {\n        username: '',\n        password: ''\n      },\n      LoginFormrules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    ResetLoginForm() {\n      this.$refs.loginFormRef.resetFields();\n    },\n    Login() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (!valid) return;\n        const params = new URLSearchParams();\n        params.append('username', this.LoginForm.username);\n        params.append('password', this.LoginForm.password);\n        const res = await this.$http.post('Login', params);\n        console.log(res);\n        if (res.data.StatusCode !== 200) return this.$message.error('登陆失败！账号或密码错误！');\n        console.log(res);\n        window.sessionStorage.setItem('SecretKey', res.data.SecreyKey);\n        this.$message.success('登录成功！');\n        this.$router.push('/home');\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","LoginForm","username","password","LoginFormrules","required","message","trigger","methods","ResetLoginForm","$refs","loginFormRef","resetFields","Login","validate","valid","params","URLSearchParams","append","res","$http","post","console","log","StatusCode","$message","error","window","sessionStorage","setItem","SecreyKey","success","$router","push"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"login_container\">\n        <div class=\"login_box\">\n            <!-- Avatar -->\n            <div class=\"avatar_box\">\n                <img src=\"../assets/logo.png\" alt=\"\" srcset=\"\">\n            </div>\n            <div class=\"Name\">\n                  <span>Smelly-Tofu 外卖系统</span>\n            </div>\n            <!-- Form -->\n            <el-form ref=\"loginFormRef\" class=\"login_form\" :model=\"LoginForm\" :rules=\"LoginFormrules\">\n                <el-form-item prop=\"username\">\n                    <el-input v-model=\"LoginForm.username\" type=\"username\" prefix-icon=\"el-icon-user\"></el-input>\n                </el-form-item>\n                <el-form-item prop=\"password\">\n                    <el-input v-model=\"LoginForm.password\" type=\"password\" prefix-icon=\"el-icon-lock\"></el-input>\n                </el-form-item>\n                <el-form-item class=\"btns\">\n                    <el-button type=\"primary\" @click=\"Login\">登录</el-button>\n                    <el-button type=\"info\" @click=\"ResetLoginForm\">重置</el-button>\n                </el-form-item>\n            </el-form>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      LoginForm: {\n        username: '',\n        password: ''\n      },\n\n      LoginFormrules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    ResetLoginForm () {\n      this.$refs.loginFormRef.resetFields()\n    },\n    Login () {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (!valid) return\n        const params = new URLSearchParams()\n        params.append('username', this.LoginForm.username)\n        params.append('password', this.LoginForm.password)\n        const res = await this.$http.post('Login', params)\n        console.log(res)\n        if (res.data.StatusCode !== 200) return this.$message.error('登陆失败！账号或密码错误！')\n        console.log(res)\n        window.sessionStorage.setItem('SecretKey', res.data.SecreyKey)\n        this.$message.success('登录成功！')\n        this.$router.push('/home')\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.login_container{\n    background-image: url('https://js.peterpig.top/back.jpg');\n    background-size: cover;\n    height: 100%;\n}\n.login_box{\n    // width: 450px;\n    // height: 300px;\n    width: 40%;\n    height: 40%;\n    background-color: #fff;\n    border-radius: 20px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%,-50%);\n    .Name{\n      display: flex;\n      height: 30%;\n      align-items: center;\n      justify-content: center;\n      padding: 10% 10%;\n      font-size: 2.5vw;\n    }\n    .avatar_box{\n        // weight: 130px;\n        // height: 130px;\n        weight: 20%;\n        height: 20%;\n        border: 1px solid #eee;\n        border-radius: 50%;\n        padding: 10px;\n        box-shadow: 0 0 10px #ddd;\n        position: absolute;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background-color: #fff;\n        img{\n            width: 100%;\n            height: 100%;\n            border-radius: 50%;\n            background-color: #eee;\n        }\n    }\n}\n\n.btns{\n    display: flex;\n    justify-content: flex-end;\n}\n\n.login_form{\n    position: absolute;\n    bottom: 0%;\n    width: 100%;\n    // height: 80%;\n    padding: 0% 10%;\n    box-sizing: border-box;\n}\n</style>\n"],"mappings":";;;;AA4BA;EACAA,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MAEAC,cAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,WAAA;IACA;IACAC,MAAA;MACA,KAAAH,KAAA,CAAAC,YAAA,CAAAG,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;QACA,MAAAC,MAAA,OAAAC,eAAA;QACAD,MAAA,CAAAE,MAAA,kBAAAjB,SAAA,CAAAC,QAAA;QACAc,MAAA,CAAAE,MAAA,kBAAAjB,SAAA,CAAAE,QAAA;QACA,MAAAgB,GAAA,cAAAC,KAAA,CAAAC,IAAA,UAAAL,MAAA;QACAM,OAAA,CAAAC,GAAA,CAAAJ,GAAA;QACA,IAAAA,GAAA,CAAAnB,IAAA,CAAAwB,UAAA,sBAAAC,QAAA,CAAAC,KAAA;QACAJ,OAAA,CAAAC,GAAA,CAAAJ,GAAA;QACAQ,MAAA,CAAAC,cAAA,CAAAC,OAAA,cAAAV,GAAA,CAAAnB,IAAA,CAAA8B,SAAA;QACA,KAAAL,QAAA,CAAAM,OAAA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}