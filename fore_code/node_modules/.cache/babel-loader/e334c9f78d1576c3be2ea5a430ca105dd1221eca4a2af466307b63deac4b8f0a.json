{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      // 定义登录表单的数据绑定对象\n      LoginForm: {\n        Username: '',\n        Password: ''\n      },\n      // 定义表单的验证规则对象\n      LoginFormRules: {\n        // 验证用户名是否合法\n        Username: [{\n          required: true,\n          message: \"请输入用户名称\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 10,\n          message: \"长度在3-10个字符\",\n          trigger: \"blur\"\n        }],\n        // 验证密码是否合法\n        Password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 7,\n          max: 20,\n          message: \"长度在7-20个字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    // 点击重置按钮，重置登录表单\n    ResetLoginForm() {\n      this.$refs.LoginFormRef.resetFields();\n    },\n    Login() {\n      this.$refs.LoginFormRef.validate(async valid => {\n        if (!valid) return;\n        const params = new URLSearchParams();\n        // 根据API调整(已调，待测试)\n        params.append('username', this.LoginForm.Username);\n        params.append('password', this.LoginForm.Password);\n        const res = await this.$http.post('Login', params);\n        console.log(res);\n        if (res.data.statusCode !== 200) return this.$message.error('res.data.msg');\n        console.log(res);\n\n        // 保存SecretKey来鉴权（根据API调整）\n        window.sessionStorage.setItem('SecretKey', res.data.SecretKey);\n        this.$message.success('登录成功！');\n\n        // 页面跳转\n        this.$router.push('/admin');\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","LoginForm","Username","Password","LoginFormRules","required","message","trigger","min","max","methods","ResetLoginForm","$refs","LoginFormRef","resetFields","Login","validate","valid","params","URLSearchParams","append","res","$http","post","console","log","statusCode","$message","error","window","sessionStorage","setItem","SecretKey","success","$router","push"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\r\n\t<div class=\"login_container\">\r\n\t\t<div class=\"login_box\">\r\n\t\t\t<!-- 头像区域 -->\r\n\t\t\t<div class=\"avatar_box\">\r\n\t\t\t\t<img src=\"../assets/logo.png\">\r\n\t\t\t</div>\r\n\t\t\t<!-- 表单区域 -->\r\n\t\t\t<el-form ref=\"LoginFormRef\" :model=\"LoginForm\" :rules=\"LoginFormRules\" label-width=\"0px\" class=\"login_form\">\r\n\t\t\t\t<!-- 用户名 -->\r\n\t\t\t\t<el-form-item prop=\"Username\">\r\n\t\t\t\t\t<el-input v-model=\"LoginForm.Username\" prefix-icon=\"iconfont icon-yonghu\" placeholder=\"用户名\"></el-input>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t<!-- 密码 -->\r\n\t\t\t\t<el-form-item prop=\"Password\">\r\n\t\t\t\t\t<el-input v-model=\"LoginForm.Password\" type=\"password\" prefix-icon=\"iconfont icon-suoding\" placeholder=\"密码\"></el-input>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t\t\r\n\t\t\t\t<!-- 按钮区域 -->\r\n\t\t\t\t<el-form-item class=\"btns\">\r\n\t\t\t\t\t<el-button type=\"primary\" @click=\"Login()\">登录</el-button>\r\n\t\t\t\t\t<el-button type=\"info\" @click=\"ResetLoginForm()\">重置</el-button>\r\n\t\t\t\t</el-form-item>\r\n\t\t\t</el-form>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tdata(){\r\n\t\treturn{\r\n\t\t\t// 定义登录表单的数据绑定对象\r\n\t\t\tLoginForm: {\r\n\t\t\t\tUsername:'',\r\n\t\t\t\tPassword:''\r\n\t\t\t},\r\n\t\t\t// 定义表单的验证规则对象\r\n\t\t\tLoginFormRules: {\r\n\t\t\t\t// 验证用户名是否合法\r\n\t\t\t\tUsername:[\r\n\t\t\t\t\t{required:true, message:\"请输入用户名称\", trigger: \"blur\"},\r\n\t\t\t\t\t{min:3, max:10, message:\"长度在3-10个字符\", trigger: \"blur\"}\r\n\t\t\t\t],\r\n\t\t\t\t// 验证密码是否合法\r\n\t\t\t\tPassword:[\r\n\t\t\t\t\t{required:true, message:\"请输入密码\", trigger: \"blur\"},\r\n\t\t\t\t\t{min:7, max:20, message:\"长度在7-20个字符\", trigger: \"blur\"}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\t// 点击重置按钮，重置登录表单\r\n\t\tResetLoginForm(){\r\n\t\t\tthis.$refs.LoginFormRef.resetFields();\r\n\t\t},\r\n\t\tLogin(){\r\n\t\t\tthis.$refs.LoginFormRef.validate(async valid =>{\r\n\t\t\t\tif (!valid) return\r\n\t\t\t\t        const params = new URLSearchParams()\r\n\t\t\t\t\t\t// 根据API调整(已调，待测试)\r\n\t\t\t\t        params.append('username', this.LoginForm.Username)\r\n\t\t\t\t        params.append('password', this.LoginForm.Password)\r\n\t\t\t\t        const res = await this.$http.post('Login', params)\r\n\t\t\t\t        console.log(res)\r\n\t\t\t\t        if (res.data.statusCode !== 200) return this.$message.error('res.data.msg')\r\n\t\t\t\t        console.log(res)\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 保存SecretKey来鉴权（根据API调整）\r\n\t\t\t\t        window.sessionStorage.setItem('SecretKey', res.data.SecretKey)\r\n\t\t\t\t        this.$message.success('登录成功！')\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 页面跳转\r\n\t\t\t\t        this.$router.push('/admin')\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n\t\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\t.login_container{\r\n\t\tbackground-color: #434343;\r\n\t\theight: 100%;\r\n\t}\r\n\t.login_box{\r\n\t\twidth: 500px;\r\n\t\theight: 350px;\r\n\t\tbackground-color: #ffffff;\r\n\t\tborder-radius: 5px;\r\n\t\tbox-shadow: 10px 10px 10px 1px #8e8e8e;\r\n\t\tposition: absolute;\r\n\t\ttop: 50%;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t}\r\n\t.avatar_box{\r\n\t\twidth: 110px;\r\n\t\theight: 110px;\r\n\t\tborder:1px solid #eee;\r\n\t\tborder-radius: 50%;\r\n\t\tpadding: 7px;\r\n\t\tbox-shadow: 0 0 10px #eee;\r\n\t\tbackground-color: #fff;\r\n\t\tposition: absolute;\r\n\t\tleft: 50%;\r\n\t\ttransform: translate(-50%, -50%);\r\n\t}\r\n\t.avatar_box img{\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tborder-radius: 50%;\r\n\t\tbackground-color: #eee;\r\n\t}\r\n\t.login_form{\r\n\t\tposition: absolute;\r\n\t\tbottom: 5%;\r\n\t\twidth: 100%;\r\n\t\theight: 200px;\r\n\t\tpadding: 0 20px;\r\n\t\tbox-sizing: border-box;\r\n\t}\r\n\t.btns{\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t}\r\n</style>\r\n"],"mappings":";;;;AA6BA;EACAA,KAAA;IACA;MACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACA;MACAC,cAAA;QACA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACA;IACAC,eAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,WAAA;IACA;IACAC,MAAA;MACA,KAAAH,KAAA,CAAAC,YAAA,CAAAG,QAAA,OAAAC,KAAA;QACA,KAAAA,KAAA;QACA,MAAAC,MAAA,OAAAC,eAAA;QACA;QACAD,MAAA,CAAAE,MAAA,kBAAAnB,SAAA,CAAAC,QAAA;QACAgB,MAAA,CAAAE,MAAA,kBAAAnB,SAAA,CAAAE,QAAA;QACA,MAAAkB,GAAA,cAAAC,KAAA,CAAAC,IAAA,UAAAL,MAAA;QACAM,OAAA,CAAAC,GAAA,CAAAJ,GAAA;QACA,IAAAA,GAAA,CAAArB,IAAA,CAAA0B,UAAA,sBAAAC,QAAA,CAAAC,KAAA;QACAJ,OAAA,CAAAC,GAAA,CAAAJ,GAAA;;QAEA;QACAQ,MAAA,CAAAC,cAAA,CAAAC,OAAA,cAAAV,GAAA,CAAArB,IAAA,CAAAgC,SAAA;QACA,KAAAL,QAAA,CAAAM,OAAA;;QAEA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}