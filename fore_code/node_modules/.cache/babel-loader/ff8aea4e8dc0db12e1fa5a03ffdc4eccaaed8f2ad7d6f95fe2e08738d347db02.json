{"ast":null,"code":"import Vue from 'vue';\nimport Router from 'vue-router';\nimport Login from '../components/Login.vue';\nimport Admin from '../components/Admin.vue';\nimport Welcome from '../components/Welcome.vue';\nVue.use(Router);\nconst router = new Router({\n  routes: [\n  // 重定向网页，如下意思即为启动APP时，默认将网址定向到login页面\n  {\n    path: '/',\n    redirect: 'Login'\n  },\n  // 当用户在浏览器中访问/login'这个地址的时候，用component属性来展示Login组件\n  {\n    path: '/login',\n    component: Login\n  }, {\n    path: '/admin',\n    component: Admin\n  }, {\n    path: '/news',\n    component: News,\n    children: [{\n      path: '/views',\n      component: Views\n    }, {\n      path: '/write',\n      component: Write\n    }]\n  }]\n});\n\n// 挂载路由导航守卫（这段代码会影响生产过程中检查别的组件，所以在项目完成前暂时先备注掉）\n// router.beforeEach((to, from, next) => {\n// \tif(to.path ==='/login') return next();\n// \t// 获取SecretKey\n// \tconst SceretKey = window.sessionStorage.getItem('SecretKey')\n// \t  if (!SceretKey) {\n// \t    return next('/login')\n// \t  }\n// \t  next()\n// })\nexport default router;","map":{"version":3,"names":["Vue","Router","Login","Admin","Welcome","use","router","routes","path","redirect","component","News","children","Views","Write"],"sources":["D:/GitHub/Dog-Baby/fore_code/src/router/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Login from '../components/Login.vue'\r\nimport Admin from '../components/Admin.vue'\r\nimport Welcome from '../components/Welcome.vue'\r\n\r\nVue.use(Router)\r\n\nconst router = new Router({\n\troutes: [\r\n\t// 重定向网页，如下意思即为启动APP时，默认将网址定向到login页面\r\n\t\t{ path: '/', redirect:'Login'},\r\n    // 当用户在浏览器中访问/login'这个地址的时候，用component属性来展示Login组件\r\n\t\t{ path: '/login', component: Login },\r\n\t\t{ path: '/admin', component: Admin },\r\n\t\t{ \r\n\t\t\tpath: '/news', \r\n\t\t\tcomponent: News, \r\n\t\t\tchildren:[\r\n\t\t\t\t{path:'/views', component:Views},\r\n\t\t\t\t{path:'/write', component:Write}\r\n\t\t\t] },\r\n\t]\n})\r\n\r\n// 挂载路由导航守卫（这段代码会影响生产过程中检查别的组件，所以在项目完成前暂时先备注掉）\r\n// router.beforeEach((to, from, next) => {\r\n// \tif(to.path ==='/login') return next();\r\n// \t// 获取SecretKey\r\n// \tconst SceretKey = window.sessionStorage.getItem('SecretKey')\r\n// \t  if (!SceretKey) {\r\n// \t    return next('/login')\r\n// \t  }\r\n// \t  next()\r\n// })\r\nexport default router"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,MAAM,MAAM,YAAY;AAC/B,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,OAAO,MAAM,2BAA2B;AAE/CJ,GAAG,CAACK,GAAG,CAACJ,MAAM,CAAC;AAEf,MAAMK,MAAM,GAAG,IAAIL,MAAM,CAAC;EACzBM,MAAM,EAAE;EACR;EACC;IAAEC,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAC;EAAO,CAAC;EAC5B;EACF;IAAED,IAAI,EAAE,QAAQ;IAAEE,SAAS,EAAER;EAAM,CAAC,EACpC;IAAEM,IAAI,EAAE,QAAQ;IAAEE,SAAS,EAAEP;EAAM,CAAC,EACpC;IACCK,IAAI,EAAE,OAAO;IACbE,SAAS,EAAEC,IAAI;IACfC,QAAQ,EAAC,CACR;MAACJ,IAAI,EAAC,QAAQ;MAAEE,SAAS,EAACG;IAAK,CAAC,EAChC;MAACL,IAAI,EAAC,QAAQ;MAAEE,SAAS,EAACI;IAAK,CAAC;EAC/B,CAAC;AAEN,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}